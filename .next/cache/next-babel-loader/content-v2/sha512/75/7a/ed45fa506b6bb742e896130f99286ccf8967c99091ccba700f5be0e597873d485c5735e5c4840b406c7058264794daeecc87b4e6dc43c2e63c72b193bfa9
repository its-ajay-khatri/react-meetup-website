{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Full_Stack_development_path\\\\ReactJs\\\\NextJs\\\\Meetup-Project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      title: props,\n      image: \"https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg\",\n      address: \"Some Street 5, Some City\",\n      description: \"This is our First Meetup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["C:/Full_Stack_development_path/ReactJs/NextJs/Meetup-Project/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails","props"],"mappings":";;;AAEA,OAAOA,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,GAAyB;AACrB,sBACI;AAAA,2BACI,QAAC,YAAD;AACA,MAAA,KAAK,EAAEC,KADP;AAEA,MAAA,KAAK,EAAC,gFAFN;AAGA,MAAA,OAAO,EAAC,0BAHR;AAIA,MAAA,WAAW,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAUH;;KAXQD,a;;AAoDT,eAAeA,aAAf","sourcesContent":["import { MongoClient } from 'mongodb';\r\n\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\nfunction MeetupDetails() {\r\n    return(\r\n        <>\r\n            <MeetupDetail \r\n            title={props}\r\n            image=\"https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg\"\r\n            address=\"Some Street 5, Some City\"\r\n            description=\"This is our First Meetup\"\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport async function getStaticPaths(){\r\n\r\n    const client = await MongoClient.connect('mongodb+srv://mongoadmin:kKXJKjZywgAUGDgL@cluster0.rs3k4vd.mongodb.net/meetups?retryWrites=true&w=majority');\r\n        \r\n    const db = client.db();      //if the database named meetups is not created, then it will create one\r\n\r\n    const meetupsCollection = db.collection('meetups');       //connection done\r\n\r\n    const meetups = await meetupsCollection.find({}, {_id: 1}).toArray();        //({}) means give me all the objects, _id:1 means data will be fetch with old _id field\r\n\r\n    return{\r\n        fallback: false,              //allows you to generate some of your pages for specific meetupId values\r\n        paths: meetups.map(meetup =>({ \r\n            params: { meetupId: meetup._id.toString() },\r\n     })),\r\n    }\r\n}\r\n\r\n\r\nexport async function getStaticProps(context){\r\n\r\n    const meetupId = context.params.meetupId;\r\n\r\n    console.log(meetupId);\r\n\r\n    return{\r\n        props: {\r\n            meetupData:{\r\n            image:\"https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg\",\r\n            id: meetupId,\r\n            title: \"First Meetup\",\r\n            address: \"Some Street 5, Some City\",\r\n            description: \"This is our First Meetup\"\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}