{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Full_Stack_development_path\\\\ReactJs\\\\NextJs\\\\Meetup-Project\\\\pages\\\\index.js\";\nimport { MongoClient } from 'mongodb';\nimport MeetupList from '../components/meetups/MeetupList';\nconst DUMMY_MEETUPS = [{\n  id: 'm1',\n  title: 'A first Meetup',\n  image: 'https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg',\n  address: 'Some Address 5, 12345 Some City',\n  description: 'This is our first Meetup!'\n}, {\n  id: 'm2',\n  title: 'A Second Meetup',\n  image: 'https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg',\n  address: 'Some Address 10, 12345 Some City',\n  description: 'This is our Second Meetup!'\n}];\n\nfunction Homepage(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n} // export async function getServerSideProps(context){\n//     const req = context.req;\n//     const res = context.res;\n//     return{\n//         props:{\n//             meetups: DUMMY_MEETUPS\n//         }\n//     }\n// }\n\n\nexport async function getStaticProps() {\n  //function name must ne same \"getStaticProps\", use to set props for the current component\n  const client = await MongoClient.connect('mongodb+srv://mongoadmin:kKXJKjZywgAUGDgL@cluster0.rs3k4vd.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db(); //if the database named meetups is not created, then it will create one\n\n  const meetupsCollection = db.collection('meetups'); //connection done\n\n  const meetups = await meetupsCollection.find().toArray(); //meetups will be an array\n\n  client.close();\n  return {\n    props: {\n      // this props object must be there with same format \"props\"\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString() //object to string\n\n      }))\n    },\n    revalidate: 10 // will wait until 10 seconds when the data will revalidates for the page \n\n  };\n}\nexport default Homepage;","map":{"version":3,"sources":["C:/Full_Stack_development_path/ReactJs/NextJs/Meetup-Project/pages/index.js"],"names":["MongoClient","MeetupList","DUMMY_MEETUPS","id","title","image","address","description","Homepage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","meetup","_id","toString","revalidate"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,SAA5B;AAEA,OAAOC,UAAP,MAAuB,kCAAvB;AAEA,MAAMC,aAAa,GAAG,CAClB;AACIC,EAAAA,EAAE,EAAE,IADR;AAEIC,EAAAA,KAAK,EAAE,gBAFX;AAGIC,EAAAA,KAAK,EAAE,gFAHX;AAIIC,EAAAA,OAAO,EAAE,iCAJb;AAKIC,EAAAA,WAAW,EAAE;AALjB,CADkB,EAQlB;AACIJ,EAAAA,EAAE,EAAE,IADR;AAEIC,EAAAA,KAAK,EAAE,iBAFX;AAGIC,EAAAA,KAAK,EAAE,gFAHX;AAIIC,EAAAA,OAAO,EAAE,kCAJb;AAKIC,EAAAA,WAAW,EAAE;AALjB,CARkB,CAAtB;;AAiBA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAErB,sBACI;AAAA,2BACQ,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADR,mBADJ;AAKH,C,CAED;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,eAAeC,cAAf,GAA+B;AAAQ;AAE1C,QAAMC,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CAAoB,4GAApB,CAArB;AAEA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX,CAJkC,CAIL;;AAE7B,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B,CANkC,CAM6B;;AAE/D,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB,CARkC,CAQkC;;AAEpEN,EAAAA,MAAM,CAACO,KAAP;AAGA,SAAM;AACFV,IAAAA,KAAK,EAAC;AAAgC;AAClCC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAYC,MAAM,KAAK;AAC5BjB,QAAAA,KAAK,EAAEiB,MAAM,CAACjB,KADc;AAE5BE,QAAAA,OAAO,EAAEe,MAAM,CAACf,OAFY;AAG5BD,QAAAA,KAAK,EAAEgB,MAAM,CAAChB,KAHc;AAI5BF,QAAAA,EAAE,EAAEkB,MAAM,CAACC,GAAP,CAAWC,QAAX,EAJwB,CAIoB;;AAJpB,OAAL,CAAlB;AADP,KADJ;AASFC,IAAAA,UAAU,EAAE,EATV,CASoC;;AATpC,GAAN;AAWH;AAED,eAAehB,QAAf","sourcesContent":["import { MongoClient } from 'mongodb';\r\n\r\nimport MeetupList from '../components/meetups/MeetupList'\r\n\r\nconst DUMMY_MEETUPS = [\r\n    {\r\n        id: 'm1',\r\n        title: 'A first Meetup',\r\n        image: 'https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg',\r\n        address: 'Some Address 5, 12345 Some City',\r\n        description: 'This is our first Meetup!'\r\n    },\r\n    {\r\n        id: 'm2',\r\n        title: 'A Second Meetup',\r\n        image: 'https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg',\r\n        address: 'Some Address 10, 12345 Some City',\r\n        description: 'This is our Second Meetup!'\r\n    }\r\n]\r\n\r\nfunction Homepage(props) {\r\n\r\n    return (\r\n        <>\r\n                <MeetupList meetups={props.meetups} />\r\n        </>\r\n    )\r\n}\r\n\r\n// export async function getServerSideProps(context){\r\n//     const req = context.req;\r\n//     const res = context.res;\r\n\r\n//     return{\r\n//         props:{\r\n//             meetups: DUMMY_MEETUPS\r\n//         }\r\n//     }\r\n// }\r\n\r\nexport async function getStaticProps(){       //function name must ne same \"getStaticProps\", use to set props for the current component\r\n    \r\n    const client = await MongoClient.connect('mongodb+srv://mongoadmin:kKXJKjZywgAUGDgL@cluster0.rs3k4vd.mongodb.net/meetups?retryWrites=true&w=majority');\r\n        \r\n    const db = client.db();      //if the database named meetups is not created, then it will create one\r\n\r\n    const meetupsCollection = db.collection('meetups');            //connection done\r\n\r\n    const meetups = await meetupsCollection.find().toArray();           //meetups will be an array\r\n\r\n    client.close();\r\n\r\n\r\n    return{\r\n        props:{                               // this props object must be there with same format \"props\"\r\n            meetups: meetups.map(meetup => ({\r\n                title: meetup.title,\r\n                address: meetup.address,\r\n                image: meetup.image,\r\n                id: meetup._id.toString(),                      //object to string\r\n            }))\r\n        },\r\n        revalidate: 10                        // will wait until 10 seconds when the data will revalidates for the page \r\n    }\r\n}\r\n\r\nexport default Homepage;"]},"metadata":{},"sourceType":"module"}